// The PolygonMesh adaptor will be created during the update of the 
// BaseSWGeometryInstanceAdaptor (GeometryInstanceToArnoldRenderer).
// Similar adaptors could be created for Points, Lines or custom geometry types.
//
// If required, each GeometryAttribute type could define their own adaptors, 
// in which case the base class would help, but for now we'll keep it simple
// and only setup the mesh itself.
//
object PolygonMeshToArnoldRenderer : BaseGeometryAdaptor, ArnoldRendererTargetAdaptor {
  ArnoldRenderer renderer;
  PolygonMesh mesh;
  AtNode arnoldMesh;
};

function PolygonMeshToArnoldRenderer() {
  this.parent.initialize( ArnoldRendererTargetName );
  report('Created new PolygonMeshToArnoldRenderer');
}

~PolygonMeshToArnoldRenderer() {
  report( "PolygonMeshToArnoldRenderer destroying" );
}

PolygonMeshToArnoldRenderer.setRenderer!(ArnoldRenderer renderer) {
  this.renderer = renderer;
}

function Boolean PolygonMeshToArnoldRenderer.updateSource!( Ref<Object> source ) {

  UInt32 versionBefore = this.getVersion();
  this.parent.updateSource(source);
  if( versionBefore != this.getVersion() ) {

    this.mesh = source;
    report('Translated: ' +  this.mesh.debugName);

    if (this.arnoldMesh.isValid()) {
      FabricToArnoldPolygonMesh(this.mesh, this.arnoldMesh);
    }
    else {
      this.arnoldMesh = FabricToArnoldPolygonMesh(this.mesh);
      //String name = this.mesh.debugName;
      //AiNodeSetStr(this.arnoldMesh, "name", name);
    }
  }
  return true;
}
