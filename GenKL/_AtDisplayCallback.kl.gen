/** 
  This file demonstrates a simple method for implementing
  callbacks from C++ to KL.  It implements an (undocumented)
  callback for the Arnold display driver that recieves RGB 
  data from Arnold when rendering.
*/

interface AtDisplayCallBack {
    //
    // typedef void (*AtDisplayCallback)(AtUInt x, AtUInt y, AtUInt width, AtUInt height, void* buffer, void* data);
    // \param buffer - This parameter holds either AtRGB or AtRGBA pixel values
    //                  if the value is NULL it indicates a bucket is being started.
    // \cp_data      - an optional data pointer, can be set by AiNodeSetPtr(driver, 'cb_data', ...);
    //
    Callback(UInt32 x, UInt32 y, UInt32 width, UInt32 height, Data buffer, Data cb_data);
}

// Declare a function we can implement in C++ to 
function SetAtDisplayCallback(AtDisplayCallback callback) = '_fe_SetAtDisplayCallback';
