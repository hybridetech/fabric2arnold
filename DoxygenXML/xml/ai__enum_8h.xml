<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="ai__enum_8h" kind="file" language="C++">
    <compoundname>ai_enum.h</compoundname>
    <includes refid="ai__api_8h" local="yes">ai_api.h</includes>
    <includedby refid="ai__params_8h" local="yes">ai_params.h</includedby>
    <includedby refid="ai_8h" local="yes">ai.h</includedby>
    <incdepgraph>
      <node id="298">
        <label>ai_api.h</label>
        <link refid="ai__api_8h"/>
      </node>
      <node id="297">
        <label>ai_enum.h</label>
        <link refid="ai_enum.h"/>
        <childnode refid="298" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="306">
        <label>ai_filters.h</label>
        <link refid="ai__filters_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="316">
        <label>ai_shader_util.h</label>
        <link refid="ai__shader__util_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="317">
        <label>ai_texture.h</label>
        <link refid="ai__texture_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="311">
        <label>ai_metadata.h</label>
        <link refid="ai__metadata_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="303">
        <label>ai_node_entry.h</label>
        <link refid="ai__node__entry_8h"/>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
      </node>
      <node id="304">
        <label>ai_nodes.h</label>
        <link refid="ai__nodes_8h"/>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="312">
        <label>ai_dotass.h</label>
        <link refid="ai__dotass_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="301">
        <label>ai_volume.h</label>
        <link refid="ai__volume_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="305">
        <label>ai_drivers.h</label>
        <link refid="ai__drivers_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="307">
        <label>ai_cameras.h</label>
        <link refid="ai__cameras_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="315">
        <label>ai_shader_brdf.h</label>
        <link refid="ai__shader__brdf_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="300">
        <label>ai_params.h</label>
        <link refid="ai__params_8h"/>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
      </node>
      <node id="313">
        <label>ai_shader_aovs.h</label>
        <link refid="ai__shader__aovs_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="314">
        <label>ai_shaderglobals.h</label>
        <link refid="ai__shaderglobals_8h"/>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
      </node>
      <node id="310">
        <label>ai_shader_userdef.h</label>
        <link refid="ai__shader__userdef_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="308">
        <label>ai_shaders.h</label>
        <link refid="ai__shaders_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="309">
        <label>ai_shader_lights.h</label>
        <link refid="ai__shader__lights_8h"/>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="299">
        <label>ai_enum.h</label>
        <link refid="ai_enum.h"/>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="302">
        <label>ai.h</label>
        <link refid="ai_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ai__enum_1ga5987d638f44e43282a7fa98ada12495d" prot="public" static="no">
        <type>const char **</type>
        <definition>typedef const char** AtEnum</definition>
        <argsstring></argsstring>
        <name>AtEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String-based enumerated data type</para><para><ref refid="struct_at_node" kindref="compound">AtNode</ref> parameters of type <computeroutput>AI_TYPE_ENUM</computeroutput> are stored as <ref refid="group__ai__enum_1ga5987d638f44e43282a7fa98ada12495d" kindref="member">AtEnum</ref>. The <ref refid="group__ai__enum_1ga5987d638f44e43282a7fa98ada12495d" kindref="member">AtEnum</ref> data type is just an array of strings that ends with a NULL string (not an empty string, but a NULL pointer).</para><para>Note that, in order to keep backwards compatibility, any value strings beginning with a digit will be interpreted as a number. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/Arnold SDK/Arnold-4.2.7.5/include/ai_enum.h" line="27" column="1" bodyfile="E:/dev/Arnold SDK/Arnold-4.2.7.5/include/ai_enum.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ai__enum_1ga0b565941674c6d42a359cad9a2f0433d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AiEnumGetValue</definition>
        <argsstring>(AtEnum enum_type, const char *string)</argsstring>
        <name>AiEnumGetValue</name>
        <param>
          <type><ref refid="group__ai__enum_1ga5987d638f44e43282a7fa98ada12495d" kindref="member">AtEnum</ref></type>
          <declname>enum_type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/Arnold SDK/Arnold-4.2.7.5/include/ai_enum.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ai__enum_1gae4c54cf670316618053d63956c22d1ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* AiEnumGetString</definition>
        <argsstring>(AtEnum enum_type, int index)</argsstring>
        <name>AiEnumGetString</name>
        <param>
          <type><ref refid="group__ai__enum_1ga5987d638f44e43282a7fa98ada12495d" kindref="member">AtEnum</ref></type>
          <declname>enum_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/Arnold SDK/Arnold-4.2.7.5/include/ai_enum.h" line="30" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Enum data type and utility functions </para>    </detaileddescription>
    <location file="E:/dev/Arnold SDK/Arnold-4.2.7.5/include/ai_enum.h"/>
  </compounddef>
</doxygen>
