#ifndef __KL2EDK_AUTOGEN_Mat33_i__
#define __KL2EDK_AUTOGEN_Mat33_i__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Mat33_i.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.0.0
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 0
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
#include "Vec3_i.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'Mat33_i'
// Defined at Mat33_i.kl:51:1

struct Mat33_i
{
  typedef Mat33_i &Result;
  typedef Mat33_i const &INParam;
  typedef Mat33_i &IOParam;
  typedef Mat33_i &OUTParam;
  
  Vec3_i row0;
  Vec3_i row1;
  Vec3_i row2;
};

inline void Traits<Mat33_i>::ConstructEmpty( Mat33_i &val )
{
  Traits< Vec3_i >::ConstructEmpty( val.row0 );
  Traits< Vec3_i >::ConstructEmpty( val.row1 );
  Traits< Vec3_i >::ConstructEmpty( val.row2 );
}
inline void Traits<Mat33_i>::ConstructCopy( Mat33_i &lhs, Mat33_i const &rhs )
{
  Traits< Vec3_i >::ConstructCopy( lhs.row0, rhs.row0 );
  Traits< Vec3_i >::ConstructCopy( lhs.row1, rhs.row1 );
  Traits< Vec3_i >::ConstructCopy( lhs.row2, rhs.row2 );
}
inline void Traits<Mat33_i>::AssignCopy( Mat33_i &lhs, Mat33_i const &rhs )
{
  Traits< Vec3_i >::AssignCopy( lhs.row0, rhs.row0 );
  Traits< Vec3_i >::AssignCopy( lhs.row1, rhs.row1 );
  Traits< Vec3_i >::AssignCopy( lhs.row2, rhs.row2 );
}
inline void Traits<Mat33_i>::Destruct( Mat33_i &val )
{
  Traits< Vec3_i >::Destruct( val.row2 );
  Traits< Vec3_i >::Destruct( val.row1 );
  Traits< Vec3_i >::Destruct( val.row0 );
}
}}}

#endif // __KL2EDK_AUTOGEN_Mat33_i__
