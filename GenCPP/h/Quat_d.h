#ifndef __KL2EDK_AUTOGEN_Quat_d__
#define __KL2EDK_AUTOGEN_Quat_d__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'Quat_d.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.1.0-alpha3
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 1
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
#include "Vec3_d.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'Quat_d'
// Defined at Quat_d.kl:24:1

struct Quat_d
{
  typedef Quat_d &Result;
  typedef Quat_d const &INParam;
  typedef Quat_d &IOParam;
  typedef Quat_d &OUTParam;
  
  Vec3_d v;
  Float64 w;
};

inline void Traits<Quat_d>::ConstructEmpty( Quat_d &val )
{
  Traits< Vec3_d >::ConstructEmpty( val.v );
  Traits< Float64 >::ConstructEmpty( val.w );
}
inline void Traits<Quat_d>::ConstructCopy( Quat_d &lhs, Quat_d const &rhs )
{
  Traits< Vec3_d >::ConstructCopy( lhs.v, rhs.v );
  Traits< Float64 >::ConstructCopy( lhs.w, rhs.w );
}
inline void Traits<Quat_d>::AssignCopy( Quat_d &lhs, Quat_d const &rhs )
{
  Traits< Vec3_d >::AssignCopy( lhs.v, rhs.v );
  Traits< Float64 >::AssignCopy( lhs.w, rhs.w );
}
inline void Traits<Quat_d>::Destruct( Quat_d &val )
{
  Traits< Float64 >::Destruct( val.w );
  Traits< Vec3_d >::Destruct( val.v );
}
}}}

#endif // __KL2EDK_AUTOGEN_Quat_d__
